---
import "../styles/global.css";
import Layout from '../layouts/Layout.astro';
import { Icon } from 'astro-icon/components'

import automate from "../assets/automate.png"
import rewind from "../assets/rewind.gif"
import survive from "../assets/survivex.gif"
import silentspaces from "../assets/silentspaces.png"
import course from "../assets/course.png"
import cs111 from "../assets/cs111.gif"
import sunrise from "../assets/sunrise.gif"

import {Image } from "astro:assets";

const projects = [
    {
        title : "SurviveX",
        stack : "ExecuTorch | SwiftUI | Llama-3.2",
        description : "Placed first at TreeHacks 2025, this is an embedded AI assistant built for the Apple Vision Pro along with voice guidance to provide real-time survival assistance.",
        github : "https://github.com/rockuutree/SurviveX-Treehacks",
        link : "https://devpost.com/software/survivex",
        imagePath : survive,
        alt : "dashboard of all courses"
    },
    {
        title : "chat r3wind",
        stack : "Astro | React | TypeScript | Tailwind | QwenLLM",
        description : "A privacy-focused application that provides you a Spotify like wrapped of your Whatsapp Archives all in browser so your data never leaves your system.",
        github : "https://github.com/nayarmegha/chat-rewind",
        link : "https://r3wind.chat/",
        imagePath : rewind,
        alt : "whatsapp wrapped image"
    },
    {
        title : "Sunrise w Sarv",
        stack : "Flask | React | OpenWeatherMaps API | Python",
        description : "An application that predicts the chances of a good sunrise for the next day based off of cloud coverage and other factors. Built for CS351 Curriculum as a Demo Project at UIC. ",
        github : "https://github.com/University-of-Illinois-Chicago/flask-react-demo",
        link : "https://github.com/University-of-Illinois-Chicago/flask-react-demo",
        imagePath : sunrise,
        alt : "dashboard of all courses"
    },
    {
        title : "course roast",
        stack : "SQL | React | Express | Node",
        description : "Built on the idea of creating more granular data, course roast aims to move away from making a class about a professor and instead focus on the class!",
        github : "https://github.com/nandinijirobe/Course-Roast",
        link : "https://github.com/nandinijirobe/Course-Roast",
        imagePath : course,
        alt : "dashboard of all courses"
    },
    {
        title : "timesheet automate",
        stack : "Node | GoogleCalendarAPI | OAuth2 | React",
        description : "An Application to Automate filling out Timesheet PDF's by directly accessing user's Google Calendar via OAuth2 to extract work hours and autofill the timesheet.",
        github : "https://github.com/nandanasheri/timesheet-automate",
        link : "https://github.com/nandanasheri/timesheet-automate",
        imagePath : automate,
        alt : "dashboard of all courses"
    },
    {
        title : "Silent Spaces",
        stack : "MongoDB | Express | Node | React",
        description : "Silent Spaces relies on crowdsourced info to deliver frequent, high-quality updates on crowdedness, ambient noise level, and wifi connectivity.",
        github : "https://github.com/Olympicene/Silent-Spaces",
        link : "https://github.com/Olympicene/Silent-Spaces",
        imagePath : silentspaces,
        alt : "dashboard of all courses"
    },
    {
        title : "CS111 Course Website",
        stack : "Astro | Tailwind",
        description : "The official website for CS111 Summer at UIC. Built using Astro and React to showcase student projects, course logistics and updates.",
        github : "https://111-summer.cs.uic.edu/",
        link : "https://111-summer.cs.uic.edu/",
        imagePath : cs111,
        alt : "dashboard of all courses"
    }
]

---

<Layout>
    <div class="flex-1 flex flex-col gap-4 text-dark-red text-xl justify-start mt-20 mx-auto lg:max-w-4xl w-full">
        <h2 class="text-accent-red font-poppins font-bold text-3xl">&ltprojects/&gt</h2>
        <div class="flex flex-col gap-6">
            <div class="flex flex-col sm:flex-row gap-6 flex-wrap">
                {projects.map ((item) => {
                    return (
                        <article class="card shadow-lg">
                            <div class="content">
                                <div class="flex justify-between items-center">
                                    <h2 class="font-bold font-poppins text-xl">{item.title}</h2>
                                    <div class="flex gap-6">
                                        <a href={item.github} target="_blank">
                                        <Icon name="github" />
                                        </a>
                                        <a href={item.link} target="_blank">
                                        <Icon name="tab" />
                                        </a>
                                    </div>
                                    
                                </div>
                                <p class="text-sm">{item.stack}</p>
                                <p class="text-base">{item.description}</p>
                                <Image src={item.imagePath} alt={item.alt} class="w-full object-contain h-60" />
                            </div>
                        </article>
                    )
                })}
            </div>
        </div>
        </div>
    </div>
</Layout>

<style>
    .card {
        background-color: #F9EDF1;
        border-radius: 1rem;
        background-size: cover;
        margin: auto;
        height: auto;
        width: 48%;
        padding: 2rem;
        position: relative;
        transition: transform 0.1s ease;
        transform-style: preserve-3d;
        will-change: transform;
    }

    @media (max-width: 768px) {
    .card {
        min-width: 100%;
        }
    }

    
    /* Slight parallax effect on hover */
    .card:hover .content {
        transform: translateZ(12px);
    }

    .content {
        position: relative;
        z-index: 1;
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    
</style>

<script>
    const THRESHOLD = 15; // maximum threshold value

    function handleHover(e:any) {
        const card = e.currentTarget;
        const { clientX, clientY, currentTarget } = e;
        const { clientWidth, clientHeight } = currentTarget;
        const offsetLeft = currentTarget.getBoundingClientRect().left;
        const offsetTop = currentTarget.getBoundingClientRect().top;

        const horizontal = (clientX - offsetLeft) / clientWidth;
        const vertical = (clientY - offsetTop) / clientHeight;

        const rotateX = (THRESHOLD / 2 - horizontal * THRESHOLD).toFixed(2);
        const rotateY = (vertical * THRESHOLD - THRESHOLD / 2).toFixed(2);
        if (card) {
            card.style.transform = `perspective(${clientWidth}px) rotateX(${rotateY}deg) rotateY(${rotateX}deg) scale3d(1, 1, 1)`;
        }
    }

    function resetStyles(e:any) {
        const card = e.currentTarget
        if (card) {
            card.style.transform =
		`perspective(${e.currentTarget.clientWidth}px) rotateX(0deg) rotateY(0deg)`;
        }
    }

    document.querySelectorAll('.card').forEach(card => {
        card.addEventListener("mousemove", handleHover);
        card.addEventListener("mouseleave", resetStyles);
    });

</script>